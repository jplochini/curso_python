#include <iostream>
#include <stdlib.h>
#include <locale.h>

int main(int argc, char** argv) {
setlocale (LC_ALL,"");
//A variavel c_d � para casos diarios;
//A variavel m_d � para mortes diarias;
//A variavel v_tc � para total de casos;
int op;
//Variavies para mortes diarias e casos diarios.
int c_d[]={4975,5327,3258,8825,1232,1111,19030,4135,3392,2788,7502,9347,9765,9921,7073,6156,3408,6235,8555,12244,8338,2013,7649,2891,9638,8657,8350,9395,7780,5107,2610};
int m_d[]={213,113,73,365,389,325,386,262,94,46,434,284,407,207,297,75,60,365,267,321,343,302,82,56,341,313,330,324,260,146,59};
float soma_cd,media_cd,soma_md,media_md,cd_ord[31],md_ord[31];
//Variaveis para total de casos.
int v_tc[]={172875,178202,181460,190285,191517,192628,211658,215793,219185,221973,229475,238822,248587,258508,265581,271737,275145,281380,289935,302179,310517,312530,320179,323070,332708,341365,349715,359110,366890,371997,374607};
int i,j,k,l,soma,aux,aux_c,aux_m,aux_cd,aux_md,v_moda[i],m_moda[i],c_moda[i];
float media,moda,mediana,mediana_c,mediana_m,v_conta,m_conta,c_conta,modac;
int z,x,tc_maior,tc_menor,cd_menor,cd_maior,md_menor,md_maior;
int freq1,freq2,freq3,freq4,freq5,freq6,freq7,freq8,freq9,freq10,freq11,freq12,freq13,freq14,freq15,freq16,freq17,freq18,freq19,freq20;
float tc_var[i],cd_var[i],md_var[i],soma_var,soma_var_cd,soma_var_md,var,var_cd,var_md;
	
	for (i=0;i<=30;i++){
	soma+=v_tc[i];
	media=soma/31;
}
	for(i=0;i<=30;i++){
		soma_cd+= c_d[i];
		media_cd= soma_cd/31;
		soma_md+= m_d[i];
		media_md=soma_md/31;
	}

printf ("Ol�!");
printf ("\nEsse programa da a op��o para o usuario escolher entre avaliar o n�mero de casos total ou de casos e mortes diarias de COVID-19 no estado de S�o Paulo do dia 13/06/2020 - 13/07/2020.");
do{
printf  ("\nEscolha!\n1- Ver o n�mero total de casos e ver os n�meros de casos e mortes diarias.");
printf ("\n2- Calcular a m�dia de total de casos e casos e mortes diarias.");
printf ("\n3- Calcular a mediana de total de casos e casos diarios e mortes diarias.");
printf ("\n4- Ver a ordena��o e frequ�ncia de casos diarios.");
printf ("\n5- Ver a ordena��o e frequ�ncia de mortes diarias.");
printf ("\n6- Ver a moda de total de casos, casos e mortes di�rias.");
printf ("\n7- Ver o menor e maior valor de total de casos, menor e maior valor de casos e mortes di�rias.");
printf ("\n8- Ver a vari�ncia de total de casos, vari�ncia de casos e mortes di�rias.");
printf ("\nOp��o:");
scanf ("%d",&op);

while ((op!=1)&&(op!=2)&&(op!=3)&&(op!=4)&&(op!=5)&&(op!=6)&&(op!=7)&&(op!=8)&&(op!=9)&&(op!=10)&&(op!=11)){
printf ("\nPor favor digite uma das op��es!\n");
scanf ("%d",&op);
}

switch (op){
case 1:
	//Apresentar os dados
for (i=0;i<31;i++){
printf ("\nO n�mero de casos total no %d dia de COVID-19 no estado de S�o Paulo �: %d\n\n",i,v_tc[i]);
}
for (i=0;i<31;i++){
		printf ("\nO n�mero de CASOS DIARIOS no dia %d �: %d\n",i,c_d[i]);
		printf ("\nO n�mero de MORTES DIARIAS no dia %d �: %d\n",i,m_d[i]);
		}
		break;
case 2:
	//Calcular a m�dia******************************
	for (i=0;i<=30;i++){
	soma+=v_tc[i];
	media=soma/31;
}
	printf ("\nA m�dia de total de casos �: %.2f",media);
	for(i=0;i<=30;i++){
		soma_cd+= c_d[i];
		media_cd= soma_cd/31;
		soma_md+= m_d[i];
		media_md=soma_md/31;
	}
	printf ("\nA m�dia de casos diarios �: %.2f",media_cd);
	printf ("\nA m�dia de mortes diarias �: %.2f",media_md);
	break;
case 3:
	//Para calcular a mediana de total de casos*************************
	for (i=0;i<=30;i++){
		for (j=i+1;j<=31;j++){
			if (v_tc[i]>v_tc[j]);
			aux=v_tc[i];
			v_tc[i]=v_tc[j];
			v_tc[j]=aux;
		}
	}	
	mediana= (v_tc[14]+v_tc[15])/2;
	printf ("\nA mediana de total de casos �: %.2f",mediana);
	//Mediana para casos diarios*******************
	for (i=0;i<30;i++){
		for (l+1;l<=31;l++){
			if (c_d[i]>c_d[l]);
			aux_c=c_d[i];
			c_d[i]=c_d[l];
			c_d[l]=aux_c;
		}
	}
	mediana_c= (c_d[14]+c_d[15])/2;
	printf ("\nA mediana de casos diarios �: %.2f",mediana_c);
	//Mediana para mortes diarias**********************
	for (i=0;i<=30;i++){
		for (k+1;k<=31;k++){
			if (m_d[i]>m_d[k]);
			aux_m=m_d[i];
			m_d[i]=m_d[k];
			m_d[k]=aux_m;
		}
	}
	mediana_m= (m_d[14]+m_d[15])/2;
	printf ("\nA mediana de mortes diarias �: %.2f",mediana_m);
	break;
case 4:	
	//Ordena��o de casos diarios****************************
	for (i=0;i<31;i++) cd_ord[i]=c_d[i];
	for (j=0;j<31;j++) printf ("\n%f",cd_ord);
	//
	z=31;
	while (z>0){
  		for (i=0;i<z-1;i++){
    		if (cd_ord[i]>cd_ord[i+1]){
      	aux_cd=cd_ord[i];
      	cd_ord[i]=cd_ord[i+1];
      	cd_ord[i+1]=aux_cd;
    }
}
		printf ("\nz==%d\nA ordena��o de casos diarios:",z);
		for (j=0;j<31;j++) printf ("\n%.2f",cd_ord[j]);
		z--;
}

	freq1=0;
	freq2=0;
	freq3=0;
	freq4=0;
	freq5=0;
	freq6=0;
	freq7=0;
	freq8=0;
	freq9=0;
	freq10=0;
	freq11=0;
	freq12=0;
	freq13=0;
	freq14=0;
	freq15=0;
	freq16=0;
	freq17=0;
	freq18=0;
	freq19=0;
	freq20=0;
	for (i=0;i<=30;i++){
		if((cd_ord[i]>0)&&(cd_ord[i]<1000))
	freq1= freq1+1;
	else {if ((cd_ord[i]>=1000)&&(cd_ord[i]<2000))
	freq2=freq2+1;
	else {if ((cd_ord[i]>=2000)&&(cd_ord[i]<3000))
	freq3=freq3+1;
	else {if ((cd_ord[i]>=3000)&&(cd_ord[i]<4000))
	freq4=freq4+1;
	else {if ((cd_ord[i]>=4000)&&(cd_ord[i]<5000))
	freq5=freq5+1;
	else {if ((cd_ord[i]>=5000)&&(cd_ord[i]<6000))
	freq6=freq6+1;
	else {if ((cd_ord[i]>=6000)&&(cd_ord[i]<7000))
	freq7=freq7+1;
	else {if ((cd_ord[i]>=7000)&&(cd_ord[i]<8000))
	freq8=freq8+1;
	else {if ((cd_ord[i]>=8000)&&(cd_ord[i]<9000))
	freq9=freq9+1;	
	else {if ((cd_ord[i]>=9000)&&(cd_ord[i]<10000))
	freq10=freq10+1;	
	else {if ((cd_ord[i]>=10000)&&(cd_ord[i]<11000))
	freq11=freq11+1;	
	else {if ((cd_ord[i]>=11000)&&(cd_ord[i]<12000))
	freq12=freq12+1;
	else {if ((cd_ord[i]>=12000)&&(cd_ord[i]<13000))
	freq13=freq13+1;	
	else {if ((cd_ord[i]>=13000)&&(cd_ord[i]<14000))
	freq14=freq14+1;
	else {if ((cd_ord[i]>=14000)&&(cd_ord[i]<15000))
	freq15=freq15+1;
	else {if ((cd_ord[i]>=15000)&&(cd_ord[i]<16000))
	freq16=freq16+1;
	else {if ((cd_ord[i]>=16000)&&(cd_ord[i]<17000))
	freq17=freq17+1;
	else {if ((cd_ord[i]>=17000)&&(cd_ord[i]<18000))
	freq18=freq18+1;
	else {if ((cd_ord[i]>=18000)&&(cd_ord[i]<19000))
	freq19=freq19+1;
	else {if ((cd_ord[i]>=19000)&&(cd_ord[i]<20000))
	freq20=freq20+1;
	}
	 }
	  }
	   }	
		}
		 }
		  }
		   }
			}
			 }
			  }
			   }
				}
				 }
				  }
				   }
				    }
				     }
				      }
				  	   }
	printf ("\nA frequencia de 0 at� 1000 �: %d",freq1);
	printf ("\nA frequencia de 1000 at� 2000 �: %d",freq2);
	printf ("\nA frequencia de 2000 at� 3000 �: %d",freq3);
	printf ("\nA frequencia de 3000 at� 4000 �: %d",freq4);
	printf ("\nA frequencia de 4000 at� 5000 �: %d",freq5);
	printf ("\nA frequencia de 5000 at� 6000 �: %d",freq6);
	printf ("\nA frequencia de 6000 at� 7000 �: %d",freq7);
	printf ("\nA frequencia de 7000 at� 8000 �: %d",freq8);
	printf ("\nA frequencia de 8000 at� 9000 �: %d",freq9);
	printf ("\nA frequencia de 9000 at� 10000 �: %d",freq10);
	printf ("\nA frequencia de 10000 at� 11000 �: %d",freq11);
	printf ("\nA frequencia de 11000 at� 12000 �: %d",freq12);
	printf ("\nA frequencia de 12000 at� 13000 �: %d",freq13);
	printf ("\nA frequencia de 13000 at� 14000 �: %d",freq14);
	printf ("\nA frequencia de 14000 at� 15000 �: %d",freq15);
	printf ("\nA frequencia de 15000 at� 16000 �: %d",freq16);
	printf ("\nA frequencia de 16000 at� 17000 �: %d",freq17);
	printf ("\nA frequencia de 17000 at� 18000 �: %d",freq18);
	printf ("\nA frequencia de 18000 at� 19000 �: %d",freq19);
	printf ("\nA frequencia de 19000 at� 20000 �: %d",freq20);
	break;
case 5:
	//Ordena��o de mortes diarias***********************
	for (i=0;i<31;i++) md_ord[i]=m_d[i];
	for (j=0;j<31;j++) printf ("\n%.2f",md_ord);
	
	z=31;
	while (z>0){
  		for (i=0;i<z-1;i++){
    		if (md_ord[i]>md_ord[i+1]){
      	aux_md=md_ord[i];
      	md_ord[i]=md_ord[i+1];
      	md_ord[i+1]=aux_md;
    }
}
		printf ("\n%d==\nA ordena��o de mortes di�rias:",z);
		for (j=0;j<31;j++) printf ("\n%.2f",md_ord[j]);
		z--;
}
	freq1=0;
	freq2=0;
	freq3=0;
	freq4=0;
	freq5=0;
	for (i=0;i<=30;i++){
		if ((md_ord[i]>0)&&(md_ord[i]<100))
	freq1=freq1+1;
	else {if ((md_ord[i]>=100)&&(md_ord[i]<200))
	freq2=freq2+1;
	else {if ((md_ord[i]>=200)&&(md_ord[i]<300))
	freq3=freq3+1;
	else {if ((md_ord[i]>=300)&&(md_ord[i]<400))
	freq4=freq4+1;
	else {if ((md_ord[i]>=400)&&(md_ord[i]<500))
	freq5=freq5+1;
	}
	 }
	  }
		}
		 }
	printf ("\nA frequencia de 0 at� 100 �: %d",freq1);
	printf ("\nA frequencia de 100 at� 200 �: %d",freq2);
	printf ("\nA frequencia de 200 at� 300 �: %d",freq3);
	printf ("\nA frequencia de 300 at� 400 �: %d",freq4);
	printf ("\nA frequencia de 400 at� 500 �: %d",freq5);
	break;
case 6:
	for (i=0;i<=30;i++){
		for (j=i+1;j<=31;j++){
			if (v_tc[i]==v_tc[j]){
				v_moda[i]++;
				if (v_moda[i]>v_conta){
					v_conta=v_moda[i];
					moda=v_tc[i];
				}
			}
		}
	}
	printf ("\nA moda de total de casos �: %.2f",moda);

	for (i=0;i<=30;i++){
		for (j=i+1;j<=31;j++){
			if (m_d[i]==m_d[j]){
				m_moda[i]++;
				if (m_moda[i]>m_conta){
					m_conta=m_moda[i];
					moda=m_d[i];
				}
			}
		}
	}
	printf ("\nA moda de mortes di�rias �: %.2f",moda);
	for (i=0;i<=30;i++){
		for (j=i+1;j<=31;j++){
			if (c_d[i]==c_d[j]){
				c_moda[i]++;
				if (c_moda[i]>c_conta){
					c_conta=c_moda[i];
					modac=c_d[i];
				}
			}
		}
	}
	printf ("\nA moda de casos di�rios �: %.2f",modac);
	break;
case 7:
	for (i=0;i<=30;i++){
		for (j=i+1;j<=31;j++){
			if (v_tc[i]>v_tc[j]){
				aux=v_tc[i];
				v_tc[i]=v_tc[j];
				v_tc[j]=aux;
			}
	tc_menor= v_tc[1];
	tc_maior= v_tc[31];	
		}
	}
	printf ("\nTOTAL DE CASOS:");
	printf ("\nO menor valor de total de casos �: %d",tc_menor);
	printf ("\nO maior valor de total de casos �: %d\n",tc_maior);

	//****************MENOR E MAIOR VALOR DE CASOS DIARIOS*********************
	for (i=0;i<=30;i++){
		for (j=i+1;j<=31;j++){
			if (c_d[i]>c_d[j]){
				aux=c_d[i];
				c_d[i]=c_d[j];
				c_d[j]=aux;
			}
	cd_menor= c_d[1];
	cd_maior= c_d[31];		
		}
	}
	printf ("\nCASOS DI�RIOS:");
	printf ("\nO menor valor de casos di�rios �: %d",cd_menor);
	printf ("\nO maior valor de casos di�rios �: %d\n",cd_maior);
	
	//******************MENOR E MAIOR VALOR DE MORTES DI�RIAS********************
	for (i=0;i<=30;i++){
		for (j=i+1;j<=31;j++){
			if (m_d[i]>m_d[j]){
				aux=m_d[i];
				m_d[i]=m_d[j];
				m_d[j]=aux;
			}
	md_menor= m_d[1];
	md_maior= m_d[31];				
		}
	}
	printf ("\nMORTES DI�RIAS:");
	printf ("\nO menor valor de mortes di�rias �: %d",md_menor);
	printf ("\nO maior valor de mortes di�rias �: %d",md_maior);
	break;
case 8:
	// VARI�NCIA DE TOTAL DE CASOS***************
	for (i=0;i<=30;i++){
		tc_var[i]= (v_tc[i]-media)*(v_tc[i]-media);
	}
	for (i=0;i<=30;i++){
		soma_var+=tc_var[i];
	}
	var=soma_var/4;
	printf ("\nA vari�ncia de total de casos �: %.2f",var);
	//VARI�NCIA DE CASOS DI�RIOS******************** 
	for (i=0;i<=30;i++){
		cd_var[i]= (c_d[i]-media_cd)*(c_d[i]-media_cd);
	}
	for (i=0;i<=30;i++){
		soma_var_cd+=cd_var[i];
	}
	var_cd=soma_var_cd/4;
	printf ("\nA vari�ncia de casos di�rios �: %.2f",var_cd);
	
	//VARI�NCIA DE MORTES DI�RIAS*****************
	for (i=0;i<=30;i++){
		md_var[i]= (m_d[i]-media_md)*(m_d[i]-media_md);
	}
	for (i=0;i<=30;i++){
		soma_var_md+=md_var[i];
	}
	var_md=soma_var_md/4;
	printf ("\nA vari�ncia de mortes di�rias �: %.2f",var_md);
	break;
}

	printf ("\nPara parar o programa digite 0 ou qualquer valor para continuar.\n");
	scanf ("%d",&op);
}while (op!=0);
return 0;
}